# Compute paths
get_filename_component(C2PY_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
set(C2PY_INCLUDE_DIR "@CONF_INCLUDE_DIRS@")
set(C2PY_SOURCE_FILES "@C2PY_SRCS@")

include("${C2PY_CMAKE_DIR}/C2pyTensorTargets.cmake")
get_target_property(C2PY_TENSOR_LIBRARY c2py_tensor IMPORTED_LOCATION_NOCONFIG)

find_package(Python COMPONENTS Interpreter Development NumPy)
execute_process(COMMAND ${Python_EXECUTABLE} -c "import distutils.sysconfig; print(distutils.sysconfig.get_config_var('EXT_SUFFIX'))"
                RESULT_VARIABLE PYTHON_CVPY_PROCESS
                OUTPUT_VARIABLE CVPY_SUFFIX
                OUTPUT_STRIP_TRAILING_WHITESPACE)
if(NOT PYTHON_CVPY_PROCESS EQUAL 0)
    set(CVPY_SUFFIX ".so")
endif()

function(c2py_add_library)
  cmake_parse_arguments(
    C2PY "" "" "INCLUDES;SOURCES;LIBRARYS" ${ARGN}
  )

  string(REPLACE ";" "\n" export_hdrs_ "${C2PY_INCLUDES}")
  file(MAKE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/gen")
  file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/headers.txt" "${export_hdrs_}")
  execute_process(
    COMMAND ${Python_EXECUTABLE} ${C2PY_INCLUDE_DIR}/gen.py "${CMAKE_CURRENT_BINARY_DIR}/gen" "${CMAKE_CURRENT_BINARY_DIR}/headers.txt")

  include_directories(${Python_INCLUDE_DIRS})
  include_directories(${Python_NumPy_INCLUDE_DIRS})
  include_directories(${C2PY_INCLUDE_DIR})
  include_directories(${CMAKE_CURRENT_BINARY_DIR}/gen)

  foreach(arg IN LISTS ARGN)
    list(APPEND src_files_ ${arg})
  endforeach()

  add_library(c2py SHARED ${C2PY_SOURCE_FILES} ${C2PY_SOURCES})
  set_target_properties(c2py PROPERTIES
    PREFIX ""
    OUTPUT_NAME c2py
    SUFFIX ${CVPY_SUFFIX})
  target_link_libraries(c2py PUBLIC ${Python_LIBRARIES} ${C2PY_LIBRARYS})
endfunction()
